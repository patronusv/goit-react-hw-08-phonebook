{"version":3,"sources":["redux/operations/authOperations.js","redux/actions/authActions.js","redux/actions/phonebookActions.js","redux/selectors/authSelectors.js","routes/mainRoutes.js","components/header/HeaderStyled.js","components/logOutMenu/LogOutMenuStyled.js","components/logOutMenu/LogOutMenu.js","components/header/Header.js","components/privateRoute/PrivateRoute.js","components/publicRoute/PublicRoute.js","components/main/Main.js","components/App.js","redux/reducers/authReducer.js","redux/reducers/phonebookReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","process","token","headers","common","Authorization","signUpOperation","data","dispatch","a","signUpRequest","post","response","signUpSuccess","signUpError","signInOperation","signInRequest","signInSuccess","signInError","logOutOperation","logOutRequest","logOutSuccess","logOutError","getUserOperation","getState","persistToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","createAction","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","getContactsRequest","getContactsSuccess","getContactsError","setFilter","isAuth","state","getUserName","user","name","mainRoutes","path","exact","component","lazy","private","restricted","HeaderStyled","styled","header","LogOutMenuStyled","div","LogOutMenu","useDispatch","userName","useSelector","className","type","onClick","Header","isAuthenticated","map","route","to","activeClassName","PrivateRoute","MyComponent","props","render","PublicRoute","Main","fallback","App","history","useHistory","useEffect","replace","initialState","email","userReducer","createReducer","_","payload","tokenReducer","errorReducer","authReducer","combineReducers","error","contactsReducer","filter","item","id","filterReducer","loaderReducer","phonebookReducer","contacts","loader","authPersistConfig","key","storage","whitelist","rootReducer","phonebook","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","loading","document","getElementById"],"mappings":"4UAgBAA,IAAMC,SAASC,QAAUC,4CAEzB,IAAMC,EAAQ,SACRA,GACFJ,IAAMC,SAASI,QAAQC,OAAOC,cAA9B,iBAAwDH,IAFtDA,EAAQ,WAKVJ,IAAMC,SAASI,QAAQC,OAAOC,cAAgB,IAIrCC,EAAkB,SAAAC,GAAI,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DACrCD,EAASE,eAD4B,kBAGZZ,IAAMa,KAAN,gBAA4BJ,GAHhB,OAG7BK,EAH6B,OAInCV,EAAUU,EAASL,KAAKL,OACxBM,EAASK,YAAcD,EAASL,OALG,gDAOnCC,EAASM,YAAY,EAAD,KAPe,yDAAJ,uDAUtBC,EAAkB,SAAAR,GAAI,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DACrCD,EAASQ,eAD4B,kBAGZlB,IAAMa,KAAN,eAA2BJ,GAHf,OAG7BK,EAH6B,OAInCV,EAAUU,EAASL,KAAKL,OACxBM,EAASS,YAAcL,EAASL,OALG,gDAOnCC,EAASU,YAAY,EAAD,KAPe,yDAAJ,uDAUtBC,EAAkB,yDAAM,WAAMX,GAAN,SAAAC,EAAA,6DACnCD,EAASY,eAD0B,kBAG3BtB,IAAMa,KAAN,iBAH2B,OAIjCT,IACAM,EAASa,eALwB,gDAOjCb,EAASc,YAAY,EAAD,KAPa,yDAAN,uDAUlBC,EAAmB,yDAAM,WAAOf,EAAUgB,GAAjB,mBAAAf,EAAA,2DAGhCe,IADaC,EAFmB,EAElCC,KAAQxB,MAF0B,wDAKpCA,EAAUuB,GACVjB,EAASmB,eAN2B,kBAQX7B,IAAM8B,IAAN,kBARW,OAQ5BhB,EAR4B,OASlCJ,EAASqB,YAAsBjB,EAASL,OATN,kDAWlCC,EAASsB,YAAoB,EAAD,KAXM,0DAAN,0D,+BCzDhC,maAEapB,EAAgBqB,YAAa,sBAC7BlB,EAAgBkB,YAAa,sBAC7BjB,EAAciB,YAAa,oBAE3Bf,EAAgBe,YAAa,sBAC7Bd,EAAgBc,YAAa,sBAC7Bb,EAAca,YAAa,oBAE3BX,EAAgBW,YAAa,sBAC7BV,EAAgBU,YAAa,sBAC7BT,EAAcS,YAAa,oBAE3BJ,EAAwBI,YAAa,8BACrCF,EAAwBE,YAAa,8BACrCD,EAAsBC,YAAa,6B,oDChBhD,+VAEaC,EAAoBD,YAAa,wBACjCE,EAAoBF,YAAa,wBACjCG,EAAkBH,YAAa,sBAE/BI,EAAuBJ,YAAa,2BACpCK,EAAuBL,YAAa,2BACpCM,EAAqBN,YAAa,yBAElCO,EAAqBP,YAAa,wBAClCQ,EAAqBR,YAAa,wBAClCS,EAAmBT,YAAa,sBAEhCU,EAAYV,YAAa,wB,8HCdzBW,EAAS,SAAAC,GAAK,OAAIA,EAAMjB,KAAKxB,OAC7B0C,EAAc,SAAAD,GAAK,OAAIA,EAAMjB,KAAKmB,KAAKC,MCoCrCC,EAnCI,CACjB,CACEC,KAAM,IACNF,KAAM,OACNG,OAAO,EACPC,UAAWC,gBAAK,kBAAM,iCACtBC,SAAS,EACTC,YAAY,GAEd,CACEL,KAAM,YACNF,KAAM,WACNG,OAAO,EACPC,UAAWC,gBAAK,kBAAM,iCACtBC,SAAS,EACTC,YAAY,GAEd,CACEL,KAAM,SACNF,KAAM,QACNG,OAAO,EACPC,UAAWC,gBAAK,kBAAM,iCACtBC,SAAS,EACTC,YAAY,GAEd,CACEL,KAAM,YACNF,KAAM,WACNG,OAAO,EACPC,UAAWC,gBAAK,kBAAM,uDACtBC,SAAS,EACTC,YAAY,I,grBChChB,IA2BeC,EA3BMC,IAAOC,OAAV,K,qhBCAlB,I,YAuBeC,EAvBUF,IAAOG,IAAV,KCoBPC,EAhBI,WACjB,IAAMnD,EAAWoD,cACXC,EAAWC,YAAYlB,GAI7B,OACE,eAAC,EAAD,WACE,uBAAMmB,UAAU,iBAAhB,oBAAyCF,KACzC,wBAAQE,UAAU,mBAAmBC,KAAK,SAASC,QANtC,WACfzD,EAASW,gBAKP,yBC0BS+C,EAhCA,WACb,IAAMC,EAAkBL,YAAYpB,GAEpC,OACE,eAAC,EAAD,WACGyB,EACGpB,EAAWqB,KACT,SAAAC,GAAK,OACFA,EAAMhB,YACL,cAAC,IAAD,CAASiB,GAAID,EAAMrB,KAAuBC,MAAOoB,EAAMpB,MAAOc,UAAU,UAAUQ,gBAAgB,iBAAlG,SACGF,EAAMvB,MADqBuB,EAAMvB,SAK1CC,EAAWqB,KACT,SAAAC,GAAK,OACFA,EAAMjB,SACL,cAAC,IAAD,CAASkB,GAAID,EAAMrB,KAAuBC,MAAOoB,EAAMpB,MAAOc,UAAU,UAAUQ,gBAAgB,iBAAlG,SACGF,EAAMvB,MADqBuB,EAAMvB,SAU7CqB,GAAmB,cAAC,EAAD,Q,gBCpBXK,EAXM,SAAC,GAA0C,IAA7BC,EAA4B,EAAvCvB,UAA2BwB,EAAY,6BACvDP,EAAkBL,YAAYpB,GACpC,OACE,cAAC,IAAD,2BACMgC,GADN,IAEEC,OAAQ,SAAAD,GACN,OAAOP,EAAkB,cAACM,EAAD,eAAiBC,IAAY,cAAC,IAAD,CAAUJ,GAAG,gBCM5DM,EAZK,SAAC,GAAsD,IAAzCH,EAAwC,EAAnDvB,UAAwBG,EAA2B,EAA3BA,WAAeqB,EAAY,0CAClEP,EAAkBL,YAAYpB,GACpC,OACE,cAAC,IAAD,2BACMgC,GADN,IAEEC,OAAQ,SAAAD,GACN,OAAOP,GAAmBd,EAAa,cAAC,IAAD,CAAUiB,GAAG,cAAiB,cAACG,EAAD,eAAiBC,SCS/EG,EAZF,WACX,OACE,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACE,cAAC,IAAD,UACG/B,EAAWqB,KAAI,SAAAC,GAAK,OACnBA,EAAMjB,QAAU,cAAC,EAAD,eAAmCiB,GAAhBA,EAAMrB,MAAsB,cAAC,EAAD,2BAAkCqB,GAAlC,IAAyChB,WAAYgB,EAAMhB,aAAzCgB,EAAMrB,cCuBlF+B,EA3BH,WACV,IAAMvE,EAAWoD,cACXO,EAAkBL,YAAYpB,GAC9BsC,EAAUC,cAgBhB,OAfAC,qBAAU,WACHf,EAIL3D,EAASe,eAHPyD,EAAQG,QAAQ,YAKjB,IACHD,qBAAU,WACHf,GACHa,EAAQG,QAAQ,YAIjB,CAAChB,IAEF,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,oCClBAiB,EAAe,CAAEtC,KAAM,GAAIuC,MAAO,IAElCC,EAAcC,YAAcH,GAAD,mBAC9BvE,KAAgB,SAAC2E,EAAD,YAAMC,QAAsB5C,QADd,cAE9B5B,KAAgB,SAACuE,EAAD,YAAMC,QAAsB5C,QAFd,cAG9BhB,KAAwB,SAAC2D,EAAD,YAAMC,WAHA,cAI9BpE,KAAgB,kBAAM+D,KAJQ,IAM3BM,EAAeH,YAAc,MAAD,mBAC/B1E,KAAgB,SAAC2E,EAAD,YAAMC,QAAsBvF,SADb,cAE/Be,KAAgB,SAACuE,EAAD,YAAMC,QAAsBvF,SAFb,cAG/BmB,KAAgB,kBAAM,QAHS,IAK5BsE,EAAeJ,YAAc,MAAD,mBAC/BzE,KAAc,SAAC0E,EAAD,YAAMC,WADW,cAE/BvE,KAAc,SAACsE,EAAD,YAAMC,WAFW,cAG/B3D,KAAsB,SAAC0D,EAAD,YAAMC,WAHG,cAI/BnE,KAAc,SAACkE,EAAD,YAAMC,WAJW,IAanBG,EANKC,YAAgB,CAClChD,KAAMyC,EACNpF,MAAOwF,EACPI,MAAOH,I,eCfHI,EAAkBR,YAAc,IAAD,iBAAC,EACnCtD,KANkB,SAACU,EAAD,OAAU8C,EAAV,EAAUA,QAAV,4BAA4B9C,GAA5B,CAAmC8C,OAKnB,YAAC,EAEnCrD,KANqB,SAACO,EAAD,OAAU8C,EAAV,EAAUA,QAAV,mBAA4B9C,EAAMqD,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAOT,SAIhD,YAAC,EAGnClD,KAL0B,SAACiD,EAAD,OAAMC,EAAN,EAAMA,QAAN,mBAAwBA,MAEhB,IAK/BU,EAAgBZ,YAAc,GAAD,eAChC9C,KATiB,SAAC+C,EAAD,YAAMC,YAYpBW,EAAgBb,aAAc,GAAD,iBAAC,EACjCvD,KAAoB,kBAAM,KADM,YAAC,EAEjCC,KAAoB,kBAAM,KAFM,YAAC,EAGjCC,KAAkB,kBAAM,KAHQ,YAAC,EAIjCC,KAAuB,kBAAM,KAJG,YAAC,EAKjCC,KAAuB,kBAAM,KALG,YAAC,EAMjCC,KAAqB,kBAAM,KANK,YAAC,EAOjCC,KAAqB,kBAAM,KAPK,YAAC,EAQjCC,KAAqB,kBAAM,KARK,YAAC,EASjCC,KAAmB,kBAAM,KATO,IAW7BmD,EAAeJ,YAAc,MAAD,mBAC/BrD,KAAkB,SAACsD,EAAD,YAAMC,WADO,cAE/BpD,KAAqB,SAACmD,EAAD,YAAMC,WAFI,cAG/BjD,KAAmB,SAACgD,EAAD,YAAMC,WAHM,IAanBY,EAPUR,YAAgB,CACvCS,SAAUP,EACVC,OAAQG,EACRI,OAAQH,EACRN,MAAOH,I,QC5CHa,EAAoB,CACxBC,IAAK,OACLC,Q,OAAAA,EACAC,UAAW,CAAC,UAQCC,GALKf,YAAgB,CAClCgB,UAAWR,EACX3E,KAAMoF,YAAeN,EAAmBZ,KCVpCmB,GAAQC,YAAe,CAC3BC,QAASL,GACTM,WAAYC,YAAqB,CAC/BC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,UAKjDZ,MAEFa,GAAYC,YAAad,ICLtCe,IAASnD,OACP,cAAC,IAAD,CAAUoC,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAagB,QAAS,KAAMH,UAAWA,GAAvC,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINI,SAASC,eAAe,W","file":"static/js/main.2c900c2f.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  signUpRequest,\r\n  signUpSuccess,\r\n  signUpError,\r\n  signInRequest,\r\n  signInSuccess,\r\n  signInError,\r\n  logOutRequest,\r\n  logOutSuccess,\r\n  logOutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from '../actions/authActions';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_BASE_URL;\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const signUpOperation = data => async dispatch => {\r\n  dispatch(signUpRequest());\r\n  try {\r\n    const response = await axios.post(`/users/signup`, data);\r\n    token.set(response.data.token);\r\n    dispatch(signUpSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(signUpError(error));\r\n  }\r\n};\r\nexport const signInOperation = data => async dispatch => {\r\n  dispatch(signInRequest());\r\n  try {\r\n    const response = await axios.post(`/users/login`, data);\r\n    token.set(response.data.token);\r\n    dispatch(signInSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(signInError(error));\r\n  }\r\n};\r\nexport const logOutOperation = () => async dispatch => {\r\n  dispatch(logOutRequest());\r\n  try {\r\n    await axios.post(`/users/logout`);\r\n    token.unset();\r\n    dispatch(logOutSuccess());\r\n  } catch (error) {\r\n    dispatch(logOutError(error));\r\n  }\r\n};\r\nexport const getUserOperation = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistToken },\r\n  } = getState();\r\n  if (!persistToken) return;\r\n  token.set(persistToken);\r\n  dispatch(getCurrentUserRequest());\r\n  try {\r\n    const response = await axios.get(`/users/current`);\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error));\r\n  }\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const signUpRequest = createAction('auth/signUpRequest');\r\nexport const signUpSuccess = createAction('auth/signUpSuccess');\r\nexport const signUpError = createAction('auth/signUpError');\r\n\r\nexport const signInRequest = createAction('auth/signInRequest');\r\nexport const signInSuccess = createAction('auth/signInSuccess');\r\nexport const signInError = createAction('auth/signInError');\r\n\r\nexport const logOutRequest = createAction('auth/logOutRequest');\r\nexport const logOutSuccess = createAction('auth/logOutSuccess');\r\nexport const logOutError = createAction('auth/logOutError');\r\n\r\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContactRequest = createAction('phonebook/addRequest');\r\nexport const addContactSuccess = createAction('phonebook/addSuccess');\r\nexport const addContactError = createAction('phonebook/addError');\r\n\r\nexport const deleteContactRequest = createAction('phonebook/deleteRequest');\r\nexport const deleteContactSuccess = createAction('phonebook/deleteSuccess');\r\nexport const deleteContactError = createAction('phonebook/deleteError');\r\n\r\nexport const getContactsRequest = createAction('phonebook/getRequest');\r\nexport const getContactsSuccess = createAction('phonebook/getSuccess');\r\nexport const getContactsError = createAction('phonebook/getError');\r\n\r\nexport const setFilter = createAction('phonebook/setFilter');\r\n","export const isAuth = state => state.auth.token;\r\nexport const getUserName = state => state.auth.user.name;\r\n","import { lazy } from 'react';\r\n\r\nconst mainRoutes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    exact: true,\r\n    component: lazy(() => import('../pages/HomePage' /* webpackChunkName: \"HomePage\"*/)),\r\n    private: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    exact: false,\r\n    component: lazy(() => import('../pages/SignUpPage' /* webpackChunkName: \"SignUpPage\"*/)),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    exact: false,\r\n    component: lazy(() => import('../pages/SignInPage' /* webpackChunkName: \"SignInPage\"*/)),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/contacts',\r\n    name: 'Contacts',\r\n    exact: false,\r\n    component: lazy(() => import('../pages/ContactsPage' /* webpackChunkName: \"ContactsPage\"*/)),\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n];\r\n\r\nexport default mainRoutes;\r\n","import styled from 'styled-components';\r\nconst HeaderStyled = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  margin-bottom: 20px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n  .navlink {\r\n    text-decoration: none;\r\n    padding: 10px;\r\n    font-size: 20px;\r\n    color: lightgrey;\r\n  }\r\n  .navlink-active {\r\n    color: white;\r\n  }\r\n`;\r\nexport default HeaderStyled;\r\n","import styled from 'styled-components';\r\nconst LogOutMenuStyled = styled.div`\r\n  right: 20px;\r\n  position: absolute;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .logOutMenuText {\r\n    margin-right: 20px;\r\n  }\r\n  .logOutMenuButton {\r\n    padding: 5px 15px;\r\n    border: 1px solid navy;\r\n    border-radius: 5px;\r\n    background-color: lightblue;\r\n    box-shadow: 1px 1px 7px 0px rgba(140, 140, 140, 0.75);\r\n  }\r\n  .logOutMenuButton:hover,\r\n  .logOutMenuButton:focus {\r\n    background-color: yellowgreen;\r\n  }\r\n`;\r\nexport default LogOutMenuStyled;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { logOutOperation } from '../../redux/operations/authOperations';\r\nimport { getUserName } from '../../redux/selectors/authSelectors';\r\nimport LogOutMenuStyled from './LogOutMenuStyled';\r\n\r\nconst LogOutMenu = () => {\r\n  const dispatch = useDispatch();\r\n  const userName = useSelector(getUserName);\r\n  const onLogOut = () => {\r\n    dispatch(logOutOperation());\r\n  };\r\n  return (\r\n    <LogOutMenuStyled>\r\n      <span className=\"logOutMenuText\">Hello, {userName}</span>\r\n      <button className=\"logOutMenuButton\" type=\"button\" onClick={onLogOut}>\r\n        Log Out\r\n      </button>\r\n    </LogOutMenuStyled>\r\n  );\r\n};\r\n\r\nexport default LogOutMenu;\r\n","import { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport mainRoutes from '../../routes/mainRoutes';\r\nimport HeaderStyled from './HeaderStyled';\r\nimport { isAuth } from '../../redux/selectors/authSelectors';\r\n\r\nimport LogOutMenu from '../logOutMenu/LogOutMenu';\r\n\r\nconst Header = () => {\r\n  const isAuthenticated = useSelector(isAuth);\r\n\r\n  return (\r\n    <HeaderStyled>\r\n      {isAuthenticated\r\n        ? mainRoutes.map(\r\n            route =>\r\n              !route.restricted && (\r\n                <NavLink to={route.path} key={route.name} exact={route.exact} className=\"navlink\" activeClassName=\"navlink-active\">\r\n                  {route.name}\r\n                </NavLink>\r\n              ),\r\n          )\r\n        : mainRoutes.map(\r\n            route =>\r\n              !route.private && (\r\n                <NavLink to={route.path} key={route.name} exact={route.exact} className=\"navlink\" activeClassName=\"navlink-active\">\r\n                  {route.name}\r\n                </NavLink>\r\n              ),\r\n          )}\r\n      {/* {mainRoutes.map(({ path, name, exact }) => (\r\n        <NavLink to={path} key={name} exact={exact} className=\"navlink\" activeClassName=\"navlink-active\">\r\n          {name}\r\n        </NavLink>\r\n      ))} */}\r\n      {isAuthenticated && <LogOutMenu />}\r\n    </HeaderStyled>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useSelector } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { isAuth } from '../../redux/selectors/authSelectors';\r\n\r\nconst PrivateRoute = ({ component: MyComponent, ...props }) => {\r\n  const isAuthenticated = useSelector(isAuth);\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={props => {\r\n        return isAuthenticated ? <MyComponent {...props} /> : <Redirect to=\"/login\" />;\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default PrivateRoute;\r\n","import { useSelector } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { isAuth } from '../../redux/selectors/authSelectors';\r\n\r\nconst PublicRoute = ({ component: MyComponent, restricted, ...props }) => {\r\n  const isAuthenticated = useSelector(isAuth);\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={props => {\r\n        return isAuthenticated && restricted ? <Redirect to=\"/contacts\" /> : <MyComponent {...props} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import { Suspense } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport mainRoutes from '../../routes/mainRoutes';\r\nimport PrivateRoute from '../privateRoute/PrivateRoute';\r\nimport PublicRoute from '../publicRoute/PublicRoute';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <Switch>\r\n        {mainRoutes.map(route =>\r\n          route.private ? <PrivateRoute key={route.path} {...route} /> : <PublicRoute key={route.path} {...route} restricted={route.restricted} />,\r\n        )}\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { getUserOperation } from '../redux/operations/authOperations';\nimport { isAuth } from '../redux/selectors/authSelectors';\nimport Header from './header/Header';\nimport Main from './main/Main';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(isAuth);\n  const history = useHistory();\n  useEffect(() => {\n    if (!isAuthenticated) {\n      history.replace('/login');\n      return;\n    }\n    dispatch(getUserOperation());\n    // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    if (!isAuthenticated) {\n      history.replace('/login');\n      return;\n    }\n    // eslint-disable-next-line\n  }, [isAuthenticated]);\n  return (\n    <>\n      <Header />\n      <Main />\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  signUpSuccess,\r\n  signUpError,\r\n  signInSuccess,\r\n  signInError,\r\n  logOutSuccess,\r\n  logOutError,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from '../actions/authActions';\r\n\r\nconst initialState = { name: '', email: '' };\r\n\r\nconst userReducer = createReducer(initialState, {\r\n  [signUpSuccess]: (_, { payload }) => payload.user,\r\n  [signInSuccess]: (_, { payload }) => payload.user,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [logOutSuccess]: () => initialState,\r\n});\r\nconst tokenReducer = createReducer(null, {\r\n  [signUpSuccess]: (_, { payload }) => payload.token,\r\n  [signInSuccess]: (_, { payload }) => payload.token,\r\n  [logOutSuccess]: () => null,\r\n});\r\nconst errorReducer = createReducer(null, {\r\n  [signUpError]: (_, { payload }) => payload,\r\n  [signInError]: (_, { payload }) => payload,\r\n  [getCurrentUserError]: (_, { payload }) => payload,\r\n  [logOutError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst authReducer = combineReducers({\r\n  user: userReducer,\r\n  token: tokenReducer,\r\n  error: errorReducer,\r\n});\r\n\r\nexport default authReducer;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  deleteContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  getContactsError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  setFilter,\r\n} from '../actions/phonebookActions';\r\n\r\nconst onAddContact = (state, { payload }) => [...state, payload];\r\nconst onDeleteContact = (state, { payload }) => [...state.filter(item => item.id !== payload)];\r\nconst onSetFilter = (_, { payload }) => payload;\r\nconst onGetInitialContacts = (_, { payload }) => [...payload];\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [addContactSuccess]: onAddContact,\r\n  [deleteContactSuccess]: onDeleteContact,\r\n  [getContactsSuccess]: onGetInitialContacts,\r\n});\r\nconst filterReducer = createReducer('', {\r\n  [setFilter]: onSetFilter,\r\n});\r\n\r\nconst loaderReducer = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsError]: () => false,\r\n});\r\nconst errorReducer = createReducer(null, {\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n  [getContactsError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst phonebookReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n  loader: loaderReducer,\r\n  error: errorReducer,\r\n});\r\n\r\nexport default phonebookReducer;\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport phonebookReducer from './phonebookReducer';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  phonebook: phonebookReducer,\r\n  auth: persistReducer(authPersistConfig, authReducer),\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { FLUSH, PAUSE, PERSIST, persistStore, PURGE, REGISTER, REHYDRATE } from 'redux-persist';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport default store;\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store, { persistor } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}